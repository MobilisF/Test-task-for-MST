include pug/project-settings.pug
include pug/mixins/mixins.pug

doctype html
html
	head(lang="en")
		include pug/metatags.pug
		+title('Test task for MST')
		include pug/styles.pug
		link(href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&amp;subset=cyrillic" rel="stylesheet")

	body
		include pug/svg.pug
		.mst
			.mst_intro-col
				h1.intro-title Способы позиционированя блочных элементов в CSS
			.mst_wrapper
				h1.mst_title Первый способ
				.a-col
					article.a-col_left
						h2.a-col_subtitle Fixed
						p.a-col_text Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. 
					section.a-col_mid
						h2.a-col_subtitle-center С помощью Flexbox
						p.a-col_text-center Display: flex 
						p.a-col_text-after После установки данных значений свойства каждый дочерний элемент автоматически становится flex-элементом, выстраиваясь в ряд (вдоль главной оси) колонками одинаковой высоты, равной высоте блока-контейнера. При этом блочные и строчные дочерние элементы ведут себя одинаково, т.е. ширина блоков равна ширине их содержимого с учетом внутренних полей и рамок элемента.
						p.a-col_text-center Flex-direction: column
						p.a-col_text-after При ширине экрана меньше 640px делаем колонки для удобства чтения. Свойство flex-direction определяет, каким образом flex-элементы укладываются во flex-контейнере, задавая направление главной оси flex-контейнера. Они могут располагаться в двух главных направлениях — горизонтально, как строки или вертикально, как колонки. 
					article.a-col_right
						h2.a-col_subtitle Fixed
						p.a-col_text Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.		
			.mst_wrapper
				h1.mst_title Второй способ
				.b-col
					article.b-col_left
						h2.b-col_subtitle Fixed
						p.b-col_text Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. 
					section.b-col_mid
						h2.b-col_subtitle-center С помощью Float
						p.b-col_text-center Float: left 
						p.b-col_text-after Свойство float в CSS занимает особенное место. До его появления расположить два блока один слева от другого можно было лишь при помощи таблиц. Но в его работе есть ряд особенностей. Сначала мы использовали таблицы, потом обтекания (floats), позиционирование и инлайновые блоки (inline-block), но все эти методы по существу являются просто хаками и опускают много важных функциональных возможностей (например, вертикальное выравнивание).  
					article.b-col_right
						h2.b-col_subtitle Fixed
						p.b-col_text Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.
			.mst_wrapper
				h1.mst_title Третий способ
				.c-col
					article.c-col_left
						h2.c-col_subtitle Fixed
						p.c-col_text Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. 
					section.c-col_mid
						h2.c-col_subtitle-center С помощью Grid Layout
						p.c-col_text-center Display: grid 
						p.c-col_text-after В отличие от старых табличных подходов, основанных на использовании table, здесь не замусоривается семантика документа и представление четко отделено от содержания. В отличие от различных вариаций блочной верстки со становящимися при сколь-нибудь сложной структуре безумными и многоэтажными float'ами в сочетании с вручную просчитанными отступами, здесь описание стилей становится тривиально простым и прозрачным. 
						p.c-col_text-center Другие методы
						p.c-col_text-after  Остальныые способы еще менее совершенные и более устаревшие, чем флоаты и несут в себе кучу проблем.  Это, например:
							ul
								li Position: absolute. При абсолютном позиционировании элементы могут накладываться друг на друга.
								li Clearfix и плавающие блоки.
								li Display: table оставляет много ненужной разметки.
								li Inline-block несут проблему с пустыми местами.	
					article.c-col_right
						h2.c-col_subtitle Fixed
						p.c-col_text Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.	


			.mst-slider
				h1.mst-slider_header Слайдер на jQuery
				.mst-slider_wrap
					.mst-slide
						.mst-slide_main.l-span-column-2.l-span-row-2
						.mst-slide_one
							img(class="slider-img l-span-column-2" src="../images/img1.jpg" alt="")
						.mst-slide_two
							img(class="slider-img l-span-column-2" src="../images/img2.jpg" alt="")
						.mst-slide_three
							img(class="slider-img l-span-column-2" src="../images/img3.jpg" alt="")
						.mst-slide_four
							img(class="slider-img l-span-column-2" src="../images/img4.jpg" alt="")
						.mst-slide_invis
						//.mst-slide_warning This demo requires CSS Grid. The current browser you're using doesn't support it and is using a Flexbox fallback. Find 
						//a(href="https://igalia.github.io/css-grid-layout/enable.html") grid-enabled browser




			.mst-slider
				.mst-slider_header
					h1.
				
				
				
		include pug/scripts.pug
